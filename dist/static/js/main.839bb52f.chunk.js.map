{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Nav.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashbord.js","components/project/ProjectDetails.js","components/auth/Login.js","components/auth/Signup.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","user","firebase","profile","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","initials","SignedOutLinks","console","log","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","data","key","id","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","Login","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Nav","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","rootReduser","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.839bb52f.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  const { user } = props;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create-project\">New Project</NavLink>\n      </li>\n      <li>\n        {/*eslint-disable-next-line */}\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating blue lighten-1\">\n          {user.initials ? user.initials : '??'}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.firebase.profile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_FAILED\" ,err});\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch,getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(()=>{\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    })\n  }\n}\n\nexport const signUp =(newUser) => {\n  return (dispatch,getState, {getFirebase,getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp)=> {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`\n      })\n    }).then(()=>{\n      dispatch({ type: 'SIGNUP_SUCCESS'})\n    }).catch((err)=>{\n      dispatch({ type: 'SIGNUP_ERROR', err})\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => (\n  <ul className='right'>\n    <li><NavLink to='/signup'>Sign up</NavLink></li>\n    <li><NavLink to='/login'>Log In</NavLink></li>\n  </ul>\n);\n\nexport default SignedOutLinks ;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Nav = props => {\n  const { auth } = props;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\">\n          Brand\n        </Link>\n        {auth.uid ? <SignedInLinks /> : <SignedOutLinks />}\n      </div>\n    </nav>\n  );\n};\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(Nav);\n","import React from \"react\";\nimport moment from 'moment';\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(data => (\n                <li key={data.id}>\n                  <span>{data.user} </span>\n                  <span>{data.content}</span>\n                  <div className='grey-text note-date'>\n                  {moment(data.time.toDate()).fromNow()}</div>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => (\n  <div className='card z-depth-0 project-summary'>\n    <div className='card-contant grey-text text-darken-3'>\n      <span className='card-title'>{project.title}</span>\n      <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\n      <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\n    </div>\n  </div>\n);\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\nconst ProjectList = ({projects}) => (\n    <div className='project-list section'>\n     {projects && projects.map(project => {\n         return (\n           <Link  key={project.id} to={`/project/${project.id}`}>\n             <ProjectSummary key={project.id} project={project} />\n           </Link>\n         )\n     })}\n    </div>\n);\n\nexport default ProjectList;","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../project/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/login\" />;\n    return (\n      <div>\n        <div className=\"dashboard container\">\n          <div className=\"row\">\n            <div className=\"col s12 m6\">\n              <ProjectList projects={projects} />\n            </div>\n            <div className=\"col s12 m5 offset-m1\">\n              <Notifications notifications ={ notifications }/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\",orderBy: ['createdAt','desc'] },\n    { collection: \"notifications\", limit: 3, orderBy: ['time','desc']}\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = props => {\n  const { project,auth } = props;\n  if(!auth.uid) return <Redirect to='/login' />\n  if (project) {\n   return(\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n            <div className=\"card-action grey-text lighten-4\">\n              <div>Posted By {`${project.authorFirstName} ${project.authorLastName}`}</div>\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n   )\n  }else {\n  return (\n    <div className='container center'>Loading project...</div>\n  );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n   this.props.signIn(this.state);\n  };\n  render() {\n    const { authError,auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-trxt text-darken-3\">Log in</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten- z-depth-0\">LogIn</button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p>:null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state)=> {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps=(dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass Signup extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth,authError } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-trxt text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              onChange={this.handleChange}\n              value={this.state.firstName}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"lastName\"\n              onChange={this.handleChange}\n              value={this.state.lastName}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten- z-depth-0\">Sign Up</button>\n            <div className='red-text center'>\n              {authError ? <p>{ authError } </p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser => dispatch(signUp(newUser)))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup)","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/');\n  };\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/login' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-trxt text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              onChange={this.handleChange}\n              value={this.state.firstName}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              id=\"content\"\n              onChange={this.handleChange}\n              value={this.state.lastName}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten- z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state)=> {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project)=> dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","\n\nexport const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make astnc call to database \n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(()=>{\n      dispatch({type: 'CREATE_PROJECT', project});\n    }).catch((err)=>{\n      dispatch({type: 'CREATE_PROJECT_ERROR',err})\n    })\n   \n  }\n};","import React, { Component } from 'react';\nimport Nav from './components/layout/Nav';\nimport { Switch,Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashbord';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/project/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path='/' component = { Dashboard } />\n          <Route path='/project/:id' component = { ProjectDetails } />\n          <Route path='/login' component = { Login } />\n          <Route path='/signup' component = { Signup } />\n          <Route path='/create-project' component ={ CreateProject } />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_FAILED\":\n      console.log(\"login failed\");\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    case \"LOGIN_SUCSSES\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"sign out success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case \"SIGNUP_ERROR\":\n      console.log('sign up error');\n      return {\n        ...state,\n        authError: action.err.message \n      }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    {\n      id: \"1\",\n      title: \"test test test\",\n      content: \"bl,sflkdm kmdslkdmflskdmf lksmdl kmsldkfml skmdf \"\n    },\n    {\n      id: \"2\",\n      title: \"test test test2\",\n      content: \"bl,sflkdm kmdslkdmflskdmf lksmdl kmsldkfml skmdf \"\n    },\n    {\n      id: \"3\",\n      title: \"test test test3\",\n      content: \"bl,sflkdm kmdslkdmflskdmf lksmdl kmsldkfml skmdf \"\n    }\n  ]\n};\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.err);\n      return state;\n    default:\n      return state\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","  import firebase from 'firebase/app';\n  import 'firebase/firestore';\n  import 'firebase/auth';\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyDVtFs-td2ifMv2Prn7la_6YQfLJmn3hxQ\",\n    authDomain: \"jay-burbyga.firebaseapp.com\",\n    databaseURL: \"https://jay-burbyga.firebaseio.com\",\n    projectId: \"jay-burbyga\",\n    storageBucket: \"jay-burbyga.appspot.com\",\n    messagingSenderId: \"1021460868486\"\n  };\n  firebase.initializeApp(config);\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReduser from './store/reducers/rootReducer';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase }from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nconst store = createStore(rootReduser,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true,userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\n//waits for the auth to be checked before rendering\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <BrowserRouter>\n    <Provider store = { store }>\n      <App />\n    </Provider>\n    </BrowserRouter>, document.getElementById('root'));    \n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}